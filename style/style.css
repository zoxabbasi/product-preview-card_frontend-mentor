:root {
    --clr-primary-400: hsl(158, 36%, 37%);
    --clr-primary-500: hsl(158, 36%, 20%);
    --clr-secondary-200: hsl(30, 38%, 92%);

    --clr-neutral-900: hsl(212, 21%, 14%);
    --clr-neutral-400: hsl(228, 12%, 48%);
    --clr-neutral-100: hsl(0, 0%, 100%);

    --ff-accent: "Fraunces", serif;
    --ff-base: "Montserrat", sans-serif;

    --fw-regular: 500;
    --fw-bold: 700;
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

/*
    2. Remove default margin
  */
* {
    margin: 0;
}

/*
    3. Allow percentage-based heights in the application
  */
html,
body {
    height: 100%;
}

/*
    Typographic tweaks!
    4. Add accessible line-height
    5. Improve text rendering
  */
body {
    line-height: 1.7;
    -webkit-font-smoothing: antialiased;
}

/*
    6. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/*
    7. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
    font: inherit;
}

/*
    8. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

h1,
h2,
h3 {
    line-height: 1;
}

/* General styling */
body {
    font-family: var(--ff-base);
    font-weight: var(--fw-regular);
    font-size: 0.879rem;
    color: var(--clr-neutral-400);
    background: var(--clr-secondary-200);

    /* To center the card in the center of the screen */
    display: grid;
    place-content: center;

    /* Sometimes it doesn't work and we need to add min-height: 100vh; */

    margin: 1rem;
}

/* Utilities */
.flex-group {
    display: flex;
    gap: 1rem;

    /* Adding a flex-wrap to prevent overflow */
    flex-wrap: wrap;
    align-items: center;
}


.visually-hidden:not(:focus):not(:active) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.button {
    cursor: pointer;
    text-decoration: none;

    /* Inline-flex is an inline item but on the inside it's a flex based */
    display: inline-flex;
    gap: .75rem;
    justify-content: center;
    align-items: center;

    border: 0;
    border-radius: .5rem;
    padding: .75em 1.5em;
    background-color: var(--clr-primary-400);
    color: var(--clr-neutral-100);
    font-weight: var(--fw-bold);
    font-size: 0.925rem;

}

.button[data-icon="shopping-cart"]::before {
    content: '';
    background-image: url("../images/icon-cart.svg");
    width: 15px;
    height: 16px;

}

.button:is(:hover, :focus) {
    background-color: var(--clr-primary-500);
}

/* Product style */
.product {
    display: grid;
    /* Locally scoped variable */
    --content-padding: 1.5rem;
    --content-spacing: 1rem;
    background-color: var(--clr-neutral-100);
    border-radius: .5rem;

    /* Border radius isn't visible on the top sides of the image and the bottom left corner it is because the image 
    and the button are overflowing */
    overflow: hidden;

    /* To stop the card from streaching on larger screens */
    max-width: 600px;
}

@media(min-width:600px) {
    .product {
        --content-padding: 1.5rem;
        grid-template-columns: 1fr 1fr;
    }
}

.product__content {
    display: grid;
    gap: var(--content-spacing);
    padding: var(--content-padding);
}

.product__category {
    font-size: 0.8125rem;
    letter-spacing: 5px;
    text-transform: uppercase;
}

.product__title {
    font-size: 2rem;
    font-family: var(--ff-accent);
    color: var(--clr-neutral-900);
}

.product__price {
    font-size: 2rem;
    font-family: var(--ff-accent);
    color: var(--clr-primary-400);
}